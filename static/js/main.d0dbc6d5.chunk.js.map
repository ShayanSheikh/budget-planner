{"version":3,"sources":["utils/constants.js","utils/session.js","AppProvider.js","components/Confirmed.js","components/Login.js","components/MoneyDisplay.js","components/Planner.js","components/SalaryInput.js","App.js","index.js"],"names":["CLIENT_ID","COOKIES","INITIAL_STATE","user","elections","expensePercentage","salary","confirmed","getUserInfo","userInfo","Cookies","get","JSON","parse","setUserInfo","currUserInfo","combinedUserInfo","set","stringify","AppContext","React","createContext","AppProvider","children","cookieInfo","useState","state","setState","Provider","value","handleSetState","newState","Confirmed","useContext","expenses","setExpenses","savings","setSavings","useEffect","Container","Grid","container","spacing","item","xs","Button","variant","color","onClick","Login","maxWidth","Box","display","justifyContent","clientId","buttonText","onSuccess","response","token","logIn","accessToken","profileObj","givenName","onFailure","error","alert","console","log","cookiePolicy","MoneyDisplay","displayType","thousandSeparator","isNumericString","prefix","decimalScale","fixedDecimalScale","Planner","setExpensePercentage","setSalary","Slider","onChange","e","val","step","min","max","valueLabelDisplay","TextField","label","target","InputProps","inputComponent","SalaryInput","props","inputRef","other","getInputRef","onValueChange","values","name","App","onLogoutSuccess","remove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0dbc6d5.chunk.js","sourcesContent":["const CLIENT_ID = '26226890893-7uke9sajq33a0ddg5896nfkvp7phulmd.apps.googleusercontent.com'\n\nconst COOKIES = {\n  SESSION: '__session',\n  USER_INFO: '__USER_INFO'\n}\n\nconst INITIAL_STATE = {\n  user: null,\n  elections: {\n    expensePercentage: 1,\n    salary: ''\n  },\n  confirmed: false\n}\n\nexport {\n  CLIENT_ID,\n  COOKIES,\n  INITIAL_STATE\n}","import Cookies from 'js-cookie';\nimport { COOKIES } from './constants';\n\nconst getUserInfo = () => {\n  const userInfo = Cookies.get(COOKIES.USER_INFO);\n  return userInfo ? JSON.parse(userInfo) : userInfo;\n};\n\nconst setUserInfo = userInfo => {\n  const currUserInfo = getUserInfo();\n  const combinedUserInfo = { ...currUserInfo, ...userInfo };\n  Cookies.set(COOKIES.USER_INFO, JSON.stringify(combinedUserInfo));\n};\n\nconst getSession = () => {\n  return Cookies.get(COOKIES.SESSION);\n}\n\nconst logIn = (token, user) => {\n  Cookies.set(COOKIES.SESSION, token);\n  const userInfo = getUserInfo() || {};\n  setUserInfo({ ...userInfo, user });\n};\n\nconst logOut = () => {\n  Cookies.remove(COOKIES.SESSION);\n  Cookies.remove(COOKIES.USER_INFO);\n};\n\nexport {\n  getUserInfo,\n  setUserInfo,\n  getSession,\n  logIn,\n  logOut\n}","import React, { useState } from 'react';\nimport { getUserInfo } from './utils/session';\nimport { INITIAL_STATE } from './utils/constants';\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const cookieInfo = getUserInfo() || {};\n  const [state, setState] = useState({ ...INITIAL_STATE, ...cookieInfo });\n\n  const handleSetState = newState => {\n    setState({ ...state, ...newState });\n  }\n\n  return <AppContext.Provider value={{ state, handleSetState }}>{children}</AppContext.Provider>;\n};\n\nexport default AppProvider;\nexport { AppContext };","import React, { useState, useEffect, useContext } from 'react';\nimport { setUserInfo } from '../utils/session';\nimport { Button, Container, Grid } from '@material-ui/core';\nimport { MoneyDisplay } from '.';\nimport { AppContext } from '../AppProvider';\n\nconst Confirmed = () => {\n  const { state, handleSetState } = useContext(AppContext);\n  const { user, elections } = state;\n\n  const [expensePercentage] = useState(elections.expensePercentage);\n  const [salary] = useState(elections.salary);\n  const [expenses, setExpenses] = useState('');\n  const [savings, setSavings] = useState('');\n\n  useEffect(() => {\n    setExpenses(salary / 12 * expensePercentage / 100);\n    setSavings(salary / 12 * (1 - expensePercentage / 100));\n  }, [salary, expensePercentage]);\n\n  const handleEdit = () => {\n    handleSetState({ confirmed: false });\n    setUserInfo({ confirmed: false });\n  };\n\n  return (\n    <>\n      <h2>{`Thank You ${user}`}</h2>\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            Your Election\n          </Grid>\n          <Grid item xs={6}>\n            {`${expensePercentage}%`}\n          </Grid>\n          <Grid item xs={6}>\n            Your Salary\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={salary} />\n          </Grid>\n          <Grid item xs={6}>\n            Your Expenses\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={expenses} />\n          </Grid>\n          <Grid item xs={6}>\n            Your Savings\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={savings} />\n          </Grid>\n          <Grid item xs={6} />\n          <Grid item xs={6}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleEdit}\n            >\n              Edit\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Confirmed;\n","import React, { useContext } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { logIn } from '../utils/session';\nimport { CLIENT_ID } from '../utils/constants';\nimport { Box, Container } from '@material-ui/core';\nimport { AppContext } from '../AppProvider';\n\nconst Login = () => {\n  const { handleSetState } = useContext(AppContext);\n\n  const onLoginFailure = (error) => {\n    alert('There was a problem with logging you in, please try again');\n    console.log(error);\n  };\n\n  const onLoginSuccess = (response) => {\n    logIn(response.accessToken, response.profileObj.givenName);\n    handleSetState({ user: response.profileObj.givenName });\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <h1>Budget Planner</h1>\n        <GoogleLogin\n          clientId={CLIENT_ID}\n          buttonText=\"Login\"\n          onSuccess={onLoginSuccess}\n          onFailure={onLoginFailure}\n          cookiePolicy={'single_host_origin'}\n        />\n      </Box>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nconst MoneyDisplay = ({ value }) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n      decimalScale={2}\n      fixedDecimalScale\n    />\n  );\n}\n\nexport default MoneyDisplay;","import React, { useState, useEffect, useContext } from 'react';\nimport { setUserInfo } from '../utils/session';\nimport { Button, Container, Grid, Slider, TextField } from '@material-ui/core';\nimport { MoneyDisplay, SalaryInput } from '.';\nimport { AppContext } from '../AppProvider';\n\nconst Planner = () => {\n  const { state, handleSetState } = useContext(AppContext);\n  const { user, elections } = state;\n\n  const [expensePercentage, setExpensePercentage] = useState(elections.expensePercentage);\n  const [salary, setSalary] = useState(elections.salary);\n  const [expenses, setExpenses] = useState('');\n  const [savings, setSavings] = useState('');\n\n  useEffect(() => {\n    setExpenses(salary / 12 * expensePercentage / 100);\n    setSavings(salary / 12 * (1 - expensePercentage / 100));\n  }, [salary, expensePercentage]);\n\n  const handleSubmit = () => {\n    const userInfo = {\n      elections: { salary, expensePercentage },\n      confirmed: true\n    }\n    handleSetState(userInfo);\n    setUserInfo(userInfo);\n  };\n\n  return (\n    <>\n      <h2>{`Welcome ${user}`}</h2>\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            Your Election\n          </Grid>\n          <Grid item xs={6}>\n            <Slider\n              value={expensePercentage}\n              onChange={(e, val) => setExpensePercentage(val)}\n              step={0.1}\n              min={1}\n              max={30}\n              valueLabelDisplay=\"auto\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            Your Salary\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Enter Salary\"\n              value={salary}\n              onChange={e => setSalary(e.target.value)}\n              InputProps={{\n                inputComponent: SalaryInput,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            Your Expenses\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={expenses} />\n          </Grid>\n          <Grid item xs={6}>\n            Your Savings\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={savings} />\n          </Grid>\n          <Grid item xs={6} />\n          <Grid item xs={6}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Planner;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nconst SalaryInput = (props) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n      decimalScale=\"2\"\n      fixedDecimalScale\n    />\n  );\n}\n\nexport default SalaryInput;","import React, { useContext } from 'react';\nimport { GoogleLogout } from 'react-google-login';\nimport { getSession, logOut } from './utils/session';\nimport { CLIENT_ID, INITIAL_STATE } from './utils/constants';\nimport { Box, Container } from '@material-ui/core';\nimport { Confirmed, Login, Planner } from './components';\nimport { AppContext } from './AppProvider';\n\nconst App = () => {\n  const { state, handleSetState } = useContext(AppContext);\n  const { confirmed } = state;\n\n  const onLogoutSuccess = () => {\n    logOut();\n    handleSetState(INITIAL_STATE);\n  };\n\n  return (\n    getSession() ?\n      <Container maxWidth=\"sm\">\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <h1>Budget Planner</h1>\n          <GoogleLogout\n            clientId={CLIENT_ID}\n            buttonText=\"Logout\"\n            onLogoutSuccess={onLogoutSuccess}\n          />\n        </Box>\n        { confirmed ?\n          <Confirmed />\n          :\n          <Planner />\n        }\n      </Container>\n    :\n    <Login />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AppProvider from './AppProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider children={<App />}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}