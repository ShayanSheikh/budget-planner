{"version":3,"sources":["session.js","AppProvider.js","components/Confirmed.js","components/Login.js","components/MoneyDisplay.js","components/Planner.js","components/SalaryInput.js","App.js","index.js"],"names":["getUserInfo","userInfo","Cookies","get","JSON","parse","setUserInfo","currUserInfo","combinedUserInfo","set","stringify","AppContext","React","createContext","initialState","user","elections","expensePercentage","salary","confirmed","AppProvider","children","cookieInfo","useState","state","setState","Provider","value","Confirmed","useContext","expenses","setExpenses","savings","setSavings","useEffect","Container","Grid","container","spacing","item","xs","Button","variant","color","onClick","Login","clientId","buttonText","onSuccess","response","token","logIn","accessToken","profileObj","givenName","onFailure","error","console","log","cookiePolicy","MoneyDisplay","displayType","thousandSeparator","isNumericString","prefix","decimalScale","fixedDecimalScale","Planner","setExpensePercentage","setSalary","Typography","id","gutterBottom","Slider","onChange","e","val","step","min","max","valueLabelDisplay","TextField","label","target","InputProps","inputComponent","SalaryInput","props","inputRef","other","getInputRef","onValueChange","values","name","App","maxWidth","Box","display","justifyContent","onLogoutSuccess","remove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be136137.chunk.js","sourcesContent":["import Cookies from 'js-cookie'\n\nconst getUserInfo = () => {\n  const userInfo = Cookies.get('__userInfo');\n  return userInfo ? JSON.parse(userInfo) : userInfo;\n};\n\nconst setUserInfo = userInfo => {\n  const currUserInfo = getUserInfo();\n  const combinedUserInfo = { ...currUserInfo, ...userInfo };\n  Cookies.set('__userInfo', JSON.stringify(combinedUserInfo));\n};\n\nconst getSession = () => {\n  return Cookies.get('__session');\n}\n\nconst logIn = (token, user) => {\n  Cookies.set('__session', token);\n  const userInfo = getUserInfo() || {};\n  setUserInfo({ ...userInfo, user });\n};\n\nconst logOut = () => {\n  Cookies.remove('__session');\n  Cookies.remove('__userInfo');\n};\n\nexport {\n  getUserInfo,\n  setUserInfo,\n  getSession,\n  logIn,\n  logOut\n}","import React, { useState } from 'react';\nimport { getUserInfo } from './session';\n\nconst AppContext = React.createContext();\n\nconst initialState = {\n  user: null,\n  elections: {\n    expensePercentage: 1,\n    salary: ''\n  },\n  confirmed: false\n}\n\nconst AppProvider = ({ children }) => {\n  const cookieInfo = getUserInfo() || {};\n  const [state, setState] = useState({ ...initialState, ...cookieInfo })\n\n  return <AppContext.Provider value={{ state, setState }}>{children}</AppContext.Provider>;\n};\n\nexport default AppProvider;\nexport { AppContext };","import React, { useState, useEffect, useContext } from 'react';\nimport { setUserInfo } from '../session';\nimport { Button, Container, Grid } from '@material-ui/core';\nimport { MoneyDisplay } from '.';\nimport { AppContext } from '../AppProvider';\n\nconst Confirmed = () => {\n  const { state, setState } = useContext(AppContext);\n  const { user, elections } = state;\n\n  const [expensePercentage] = useState(elections.expensePercentage);\n  const [salary] = useState(elections.salary);\n  const [expenses, setExpenses] = useState('');\n  const [savings, setSavings] = useState('');\n\n  useEffect(() => {\n    setExpenses(salary / 12 * expensePercentage / 100);\n    setSavings(salary / 12 * (1 - expensePercentage / 100));\n  }, [salary, expensePercentage]);\n\n  const handleEdit = () => {\n    setState({ ...state, confirmed: false });\n    setUserInfo({ confirmed: false });\n  };\n\n  return (\n    <>\n      <h2>{`Thank You ${user}`}</h2>\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            Your Election\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={expensePercentage} />\n          </Grid>\n          <Grid item xs={6}>\n            Your Salary\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={salary} />\n          </Grid>\n          <Grid item xs={6}>\n            Your Expenses\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={expenses} />\n          </Grid>\n          <Grid item xs={6}>\n            Your Savings\n          </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={savings} />\n          </Grid>\n          <Grid item xs={6} />\n          <Grid item xs={6}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleEdit}\n            >\n              Edit\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Confirmed;\n","import React, { useContext } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { logIn } from '../session';\nimport { AppContext } from '../AppProvider';\n\nconst CLIENT_ID = '26226890893-7uke9sajq33a0ddg5896nfkvp7phulmd.apps.googleusercontent.com'\n\nconst Login = () => {\n  const { state, setState } = useContext(AppContext);\n\n  const onLoginFailure = (error) => {\n    console.log(error);\n  };\n\n  const onLoginSuccess = (response) => {\n    logIn(response.accessToken, response.profileObj.givenName);\n    setState({ ...state, user: response.profileObj.givenName});\n  }\n\n  return (\n    <GoogleLogin\n      clientId={CLIENT_ID}\n      buttonText=\"Login\"\n      onSuccess={onLoginSuccess}\n      onFailure={onLoginFailure}\n      cookiePolicy={'single_host_origin'}\n    />\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nconst MoneyDisplay = ({ value }) => {\n  return (\n    <NumberFormat\n      value={value}\n      displayType={'text'}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n      decimalScale=\"2\"\n      fixedDecimalScale\n    />\n  );\n}\n\nexport default MoneyDisplay;","import React, { useState, useEffect, useContext } from 'react';\nimport { setUserInfo } from '../session';\nimport { Button, Container, Grid, Typography, Slider, TextField } from '@material-ui/core';\nimport { MoneyDisplay, SalaryInput } from '.';\nimport { AppContext } from '../AppProvider';\n\nconst Planner = () => {\n  const { state, setState } = useContext(AppContext);\n  const { user, elections } = state;\n\n  const [expensePercentage, setExpensePercentage] = useState(elections.expensePercentage);\n  const [salary, setSalary] = useState(elections.salary);\n  const [expenses, setExpenses] = useState('');\n  const [savings, setSavings] = useState('');\n\n  useEffect(() => {\n    setExpenses(salary / 12 * expensePercentage / 100);\n    setSavings(salary / 12 * (1 - expensePercentage / 100));\n  }, [salary, expensePercentage]);\n\n  const handleSubmit = () => {\n    const userInfo = {\n      elections: { salary, expensePercentage },\n      confirmed: true\n    }\n    setState({ ...state, ...userInfo });\n    setUserInfo(userInfo);\n  };\n\n  return (\n    <>\n      <h2>{`Welcome ${user}`}</h2>\n      <Container>\n        <Typography id=\"discrete-slider\" gutterBottom>\n          Expenses\n      </Typography>\n        <Slider\n          value={expensePercentage}\n          onChange={(e, val) => setExpensePercentage(val)}\n          step={0.1}\n          min={1}\n          max={30}\n          valueLabelDisplay=\"auto\"\n        />\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            Your Salary\n        </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Enter Salary\"\n              value={salary}\n              onChange={e => setSalary(e.target.value)}\n              InputProps={{\n                inputComponent: SalaryInput,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            Your Expenses\n        </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={expenses} />\n          </Grid>\n          <Grid item xs={6}>\n            Your Savings\n        </Grid>\n          <Grid item xs={6}>\n            <MoneyDisplay value={savings} />\n          </Grid>\n          <Grid item xs={6} />\n          <Grid item xs={6}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSubmit}\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Planner;\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\nconst SalaryInput = (props) => {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n      decimalScale=\"2\"\n      fixedDecimalScale\n    />\n  );\n}\n\nexport default SalaryInput;","import React, { useContext } from 'react';\nimport { GoogleLogout } from 'react-google-login';\nimport { getSession, logOut } from './session';\nimport { Box, Container } from '@material-ui/core';\nimport { Confirmed, Login, Planner } from './components';\nimport { AppContext } from './AppProvider';\n\nconst CLIENT_ID = '26226890893-7uke9sajq33a0ddg5896nfkvp7phulmd.apps.googleusercontent.com'\n\nconst App = () => {\n  const { state, setState } = useContext(AppContext);\n  const { confirmed } = state;\n\n  const onLogoutSuccess = () => {\n    logOut();\n    setState({ ...state, user: null })\n  };\n\n  return (\n    getSession() ?\n      <Container maxWidth=\"sm\">\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <h1>Budget Planner</h1>\n          <GoogleLogout\n            clientId={CLIENT_ID}\n            buttonText=\"Logout\"\n            onLogoutSuccess={onLogoutSuccess}\n          />\n        </Box>\n        { confirmed ?\n          <Confirmed />\n          :\n          <Planner />\n        }\n      </Container>\n    :\n    <Login />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AppProvider from './AppProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider children={<App />}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}